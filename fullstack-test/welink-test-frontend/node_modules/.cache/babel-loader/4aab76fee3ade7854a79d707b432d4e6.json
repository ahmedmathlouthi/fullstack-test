{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainFormContainer() {\n  _s();\n\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault(); //just show the success page (step 4 )\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: 4,\n    //   };\n    // });\n  };\n\n  const handleChange = (event, {\n    name,\n    value,\n    checked,\n    type\n  }) => {\n    setAllValues(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const next = () => {\n    setAllValues(prevState => {\n      return { ...allValues,\n        step: prevState.step + 1\n      };\n    }); // console.log('steeep', this.state.step)\n    // setStep(this.state.step + 1);\n  };\n\n  const prev = () => {\n    setAllValues(prevState => {\n      return { ...allValues,\n        step: prevState.step - 1\n      };\n    }); // setStep(this.state.step  - 1);\n  };\n\n  const [step, setStep] = useState(1); // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    textAlign: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Step, {\n        step: step,\n        values: allValues,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainFormContainer, \"wWTSYEY/ZI6WecWl0+7UHvxh+tU=\");\n\n_c = MainFormContainer;\n\nconst Step = ({\n  step,\n  values,\n  handleChange,\n  next,\n  prev\n}) => {\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(UserForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(FeedbackForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    // case 4:\n    // return <Success values={values}\n    // />\n\n    default:\n      return null;\n  }\n};\n\n_c2 = Step;\nexport default MainFormContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainFormContainer\");\n$RefreshReg$(_c2, \"Step\");","map":{"version":3,"sources":["/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx"],"names":["React","useState","Container","Form","UserForm","FeedbackForm","MainFormContainer","allValues","setAllValues","firstName","lastName","email","gender","age","country","interests","about","handleSubmit","e","preventDefault","handleChange","event","name","value","checked","type","prevState","next","step","prev","setStep","Step","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {Container} from \"semantic-ui-react\";\n\nimport {Form} from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\n\nfunction MainFormContainer() {\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //just show the success page (step 4 )\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: 4,\n    //   };\n    // });\n  };\n  \n  const handleChange = (event, {name, value, checked, type}) => {\n    setAllValues((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n\n  const next = () => {\n    setAllValues((prevState) => {\n      return {\n        ...allValues,\n        step: prevState.step + 1,\n      };\n    });\n    // console.log('steeep', this.state.step)\n    // setStep(this.state.step + 1);\n  };\n  \n  const prev = () => {\n    setAllValues((prevState) => {\n      return {\n        ...allValues,\n        step: prevState.step - 1,\n      };\n    });\n    // setStep(this.state.step  - 1);\n  };\n\n  const [step, setStep] = useState(1);\n\n  // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return (\n    <Container textAlign='left'>\n      <Form onSubmit={handleSubmit}>\n        <Step\n          step={step}\n          values={allValues}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      </Form>\n    </Container>\n  );\n}\n\nconst Step = ({step, values, handleChange, next, prev}) => {\n  switch (step) {\n    case 1:\n      return (\n        <UserForm values={values} handleChange={handleChange} next={next} />\n      );\n    case 2:\n      return (\n        <FeedbackForm\n          values={values}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      );\n    // case 4:\n    // return <Success values={values}\n    // />\n    default:\n      return null;\n  }\n};\n\nexport default MainFormContainer"]},"metadata":{},"sourceType":"module"}