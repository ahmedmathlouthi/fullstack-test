{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleSubmit = e => {\n  e.preventDefault(); //just show the success page (step 4 )\n\n  this.setState(prevState => {\n    return { ...prevState,\n      step: 4\n    };\n  });\n};\n\nconst handleChange = (event, {\n  name,\n  value,\n  checked,\n  type\n}) => {\n  if (type === \"checkbox\") {\n    //TODO generic solution for these checkboxes!!\n    let {\n      interests\n    } = this.state;\n\n    if (checked) {\n      interests = [...interests, value];\n    } else {\n      interests = interests.filter(item => item !== value);\n    }\n\n    this.setState(prevState => {\n      return { ...prevState,\n        interests: interests\n      };\n    });\n  } else {\n    this.setState(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }\n};\n\nconst next = () => {\n  // this.setState((prevState) => {\n  //   return {\n  //     ...prevState,\n  //     step: prevState.step + 1,\n  //   };\n  // });\n  this.setStep(state.step + 1);\n};\n\nconst prev = () => {\n  // this.setState((prevState) => {\n  //   return {\n  //     ...prevState,\n  //     step: prevState.step - 1,\n  //   };\n  // });\n  this.setStep(state.step - 1);\n};\n\nfunction MainFormContainer() {\n  _s();\n\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\"\n  });\n  const [step, setStep] = useState(1); // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    textAlign: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Step, {\n        step: step // values={values}\n        ,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainFormContainer, \"wWTSYEY/ZI6WecWl0+7UHvxh+tU=\");\n\n_c = MainFormContainer;\n\nconst Step = ({\n  step,\n  values,\n  handleChange,\n  next,\n  prev\n}) => {\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(UserForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(FeedbackForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n\n    case 4: // return <Success values={values}\n    // />\n\n    default:\n      return null;\n  }\n};\n\n_c2 = Step;\nexport default MainFormContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainFormContainer\");\n$RefreshReg$(_c2, \"Step\");","map":{"version":3,"sources":["/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx"],"names":["React","useState","Container","Form","UserForm","FeedbackForm","handleSubmit","e","preventDefault","setState","prevState","step","handleChange","event","name","value","checked","type","interests","state","filter","item","next","setStep","prev","MainFormContainer","allValues","setAllValues","firstName","lastName","email","gender","age","country","about","Step","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {Container} from \"semantic-ui-react\";\n\nimport {Form} from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  //just show the success page (step 4 )\n  this.setState((prevState) => {\n    return {\n      ...prevState,\n      step: 4,\n    };\n  });\n};\n\nconst handleChange = (event, {name, value, checked, type}) => {\n  if (type === \"checkbox\") {\n    //TODO generic solution for these checkboxes!!\n    let {interests} = this.state;\n    if (checked) {\n      interests = [...interests, value];\n    } else {\n      interests = interests.filter((item) => item !== value);\n    }\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        interests: interests,\n      };\n    });\n  } else {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n};\n\nconst next = () => {\n  // this.setState((prevState) => {\n  //   return {\n  //     ...prevState,\n  //     step: prevState.step + 1,\n  //   };\n  // });\n\n  this.setStep(state.step + 1);\n};\n\nconst prev = () => {\n  // this.setState((prevState) => {\n  //   return {\n  //     ...prevState,\n  //     step: prevState.step - 1,\n  //   };\n  // });\n  this.setStep(state.step  - 1);\n};\n\nfunction MainFormContainer() {\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\",\n  });\n\n  const [step, setStep] = useState(1);\n\n  // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return (\n    <Container textAlign='left'>\n      <Form onSubmit={handleSubmit}>\n        <Step\n          step={step}\n          // values={values}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      </Form>\n    </Container>\n  );\n}\n\nconst Step = ({step, values, handleChange, next, prev}) => {\n  switch (step) {\n    case 1:\n      return (\n        <UserForm values={values} handleChange={handleChange} next={next} />\n      );\n    case 2:\n      return (\n        <FeedbackForm\n          values={values}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      );\n    case 4:\n    // return <Success values={values}\n    // />\n    default:\n      return null;\n  }\n};\n\nexport default MainFormContainer"]},"metadata":{},"sourceType":"module"}