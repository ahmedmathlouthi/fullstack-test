{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/feedback-component/FeedbackList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Container } from \"semantic-ui-react\";\nimport API from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchDataCall() {\n  try {\n    const response = await API.get(\"/feedbacks\");\n    return response;\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nfunction FeedbackList() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      let data = await fetchDataCall();\n      setData(data);\n    };\n\n    getData();\n    console.log(\"respones\", data);\n  }, []);\n  let FeedbackListToRender;\n\n  if (data !== [] && data.data !== undefined) {\n    console.log(\"in funciton dataa\", data.data.data);\n    FeedbackListToRender = data.data.data.map(feedback => /*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      header: feedback.attributes.body,\n      description: \"user:\" + feedback.attributes.user.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: FeedbackListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = FeedbackList;\nexport default FeedbackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackList\");","map":{"version":3,"sources":["/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/feedback-component/FeedbackList.jsx"],"names":["React","useEffect","useState","Card","Container","API","fetchDataCall","response","get","error","console","log","FeedbackList","data","setData","getData","FeedbackListToRender","undefined","map","feedback","attributes","body","user","firstname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,mBAA9B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;AAEA,eAAeC,aAAf,GAA+B;AAC7B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAJ,CAAQ,YAAR,CAAvB;AACA,WAAOD,QAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF;;AAED,SAASG,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAG,YAAY;AAC1B,UAAIF,IAAI,GAAG,MAAMP,aAAa,EAA9B;AACAQ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD;;AAIAE,IAAAA,OAAO;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AACD,GAPQ,EAON,EAPM,CAAT;AASA,MAAIG,oBAAJ;;AACA,MAAIH,IAAI,KAAK,EAAT,IAAeA,IAAI,CAACA,IAAL,KAAcI,SAAjC,EAA4C;AAC1CP,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,IAAI,CAACA,IAAL,CAAUA,IAA3C;AACAG,IAAAA,oBAAoB,GAAGH,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeK,GAAf,CAAoBC,QAAD,iBACxC,QAAC,IAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAEA,QAAQ,CAACC,UAAT,CAAoBC,IAF9B;AAGE,MAAA,WAAW,EAAE,UAAUF,QAAQ,CAACC,UAAT,CAAoBE,IAApB,CAAyBC;AAHlD;AAAA;AAAA;AAAA;AAAA,YADqB,CAAvB;AAOD;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA,2BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaP;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7BQJ,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Card, Container} from \"semantic-ui-react\";\nimport API from \"../../api\";\n\nasync function fetchDataCall() {\n  try {\n    const response = await API.get(\"/feedbacks\");\n    return response;\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nfunction FeedbackList() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      let data = await fetchDataCall();\n      setData(data);\n    };\n    getData();\n    console.log(\"respones\", data);\n  }, []);\n\n  let FeedbackListToRender;\n  if (data !== [] && data.data !== undefined) {\n    console.log(\"in funciton dataa\", data.data.data);\n    FeedbackListToRender = data.data.data.map((feedback) => (\n      <Card\n        fluid\n        header={feedback.attributes.body}\n        description={\"user:\" + feedback.attributes.user.firstname}\n      />\n    ));\n  }\n\n  return (\n    <Container className='main-container'>\n      <Card.Group>{FeedbackListToRender}</Card.Group>\n    </Container>\n  );\n}\n\nexport default FeedbackList;\n"]},"metadata":{},"sourceType":"module"}