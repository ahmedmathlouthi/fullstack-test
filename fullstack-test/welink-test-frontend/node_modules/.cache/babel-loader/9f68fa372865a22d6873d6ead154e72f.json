{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/feedback-component/FeedbackList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Container, Search } from \"semantic-ui-react\";\nimport API from \"../../api\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchDataCall() {\n  try {\n    const response = await API.get(\"/feedbacks\");\n    return response;\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nfunction FeedbackList() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [values, setValues] = useState({\n    isLoading: false,\n    results: [],\n    searchValue: \"\"\n  });\n  useEffect(() => {\n    const getData = async () => {\n      let data = await fetchDataCall();\n      setData(data);\n    };\n\n    getData();\n  }, []);\n\n  const handleSeach = () => {};\n\n  let FeedbackListToRender;\n\n  if (data !== [] && data.data !== undefined) {\n    FeedbackListToRender = data.data.data.map(feedback => /*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: feedback.attributes.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), \" \", feedback.attributes.user.firstname, \" \", feedback.attributes.user.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), \" \", feedback.attributes.user.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n  }\n\n  const {\n    searchValue,\n    results,\n    isLoading\n  } = values;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      input: {\n        icon: \"search\",\n        iconPosition: \"left\"\n      },\n      loading: isLoading // onResultSelect={handleResultSelect}\n      ,\n      onSearchChange: handleSeach,\n      results: results,\n      value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: FeedbackListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackList, \"lDVhMOd429F3FMlOqHcjXq2DebQ=\");\n\n_c = FeedbackList;\nexport default FeedbackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackList\");","map":{"version":3,"sources":["/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/feedback-component/FeedbackList.jsx"],"names":["React","useEffect","useState","Card","Container","Search","API","fetchDataCall","response","get","error","console","log","FeedbackList","data","setData","values","setValues","isLoading","results","searchValue","getData","handleSeach","FeedbackListToRender","undefined","map","feedback","attributes","body","user","firstname","lastname","email","icon","iconPosition"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Card, Container, Search} from \"semantic-ui-react\";\nimport API from \"../../api\";\nimport \"./style.css\";\nasync function fetchDataCall() {\n  try {\n    const response = await API.get(\"/feedbacks\");\n    return response;\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nfunction FeedbackList() {\n  const [data, setData] = useState([]);\n  const [values, setValues] = useState({\n    isLoading: false,\n    results: [],\n    searchValue: \"\",\n  });\n\n  useEffect(() => {\n    const getData = async () => {\n      let data = await fetchDataCall();\n      setData(data);\n    };\n    getData();\n  }, []);\n\n  const handleSeach = () => {};\n\n  let FeedbackListToRender;\n  if (data !== [] && data.data !== undefined) {\n    FeedbackListToRender = data.data.data.map((feedback) => (\n      <Card fluid>\n        <Card.Content>\n          <Card.Header>{feedback.attributes.body}</Card.Header>\n          <Card.Description>\n            <p>\n              <b>User:</b> {feedback.attributes.user.firstname}{\" \"}\n              {feedback.attributes.user.lastname}\n            </p>\n            <p>\n              <b>Email:</b> {feedback.attributes.user.email}{\" \"}\n            </p>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    ));\n  }\n\n  const {searchValue, results, isLoading} = values;\n\n  return (\n    <Container className='main-container'>\n      <Search\n        input={{icon: \"search\", iconPosition: \"left\"}}\n        loading={isLoading}\n        // onResultSelect={handleResultSelect}\n        onSearchChange={handleSeach}\n        results={results}\n        value={searchValue}\n      />\n      <Card.Group>{FeedbackListToRender}</Card.Group>\n    </Container>\n  );\n}\n\nexport default FeedbackList;\n"]},"metadata":{},"sourceType":"module"}