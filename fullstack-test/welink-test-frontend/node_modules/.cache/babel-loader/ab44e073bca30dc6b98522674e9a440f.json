{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainFormContainer() {\n  _s();\n\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault(); //just show the success page (step 4 )\n\n    this.setState(prevState => {\n      return { ...prevState,\n        step: 4\n      };\n    });\n  };\n\n  const handleChange = (event, {\n    name,\n    value,\n    checked,\n    type\n  }) => {\n    if (type === \"checkbox\") {\n      //TODO generic solution for these checkboxes!!\n      let {\n        interests\n      } = this.state;\n\n      if (checked) {\n        interests = [...interests, value];\n      } else {\n        interests = interests.filter(item => item !== value);\n      }\n\n      this.setState(prevState => {\n        return { ...prevState,\n          interests: interests\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return { ...prevState,\n          [name]: value\n        };\n      });\n    }\n  };\n\n  const next = () => {\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: prevState.step + 1,\n    //   };\n    // });\n    console.log('steeep', this.state.step);\n    setStep(this.state.step + 1);\n  };\n\n  const prev = () => {\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: prevState.step - 1,\n    //   };\n    // });\n    setStep(this.state.step - 1);\n  };\n\n  const [step, setStep] = useState(1); // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    textAlign: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Step, {\n        step: step // values={values}\n        ,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainFormContainer, \"wWTSYEY/ZI6WecWl0+7UHvxh+tU=\");\n\n_c = MainFormContainer;\n\nconst Step = ({\n  step,\n  values,\n  handleChange,\n  next,\n  prev\n}) => {\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(UserForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(FeedbackForm, {\n        values: values,\n        handleChange: handleChange,\n        next: next,\n        prev: prev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n\n    case 4: // return <Success values={values}\n    // />\n\n    default:\n      return null;\n  }\n};\n\n_c2 = Step;\nexport default MainFormContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainFormContainer\");\n$RefreshReg$(_c2, \"Step\");","map":{"version":3,"sources":["/home/ahmed/Documents/welink-test/welink-test-frontend/src/components/main-form/MainFormContainer.jsx"],"names":["React","useState","Container","Form","UserForm","FeedbackForm","MainFormContainer","allValues","setAllValues","firstName","lastName","email","gender","age","country","interests","about","handleSubmit","e","preventDefault","setState","prevState","step","handleChange","event","name","value","checked","type","state","filter","item","next","console","log","setStep","prev","Step","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {Container} from \"semantic-ui-react\";\n\nimport {Form} from \"semantic-ui-react\";\nimport UserForm from \"../user-component/UserForm\";\nimport FeedbackForm from \"../feedback-component/FeedbackForm\";\n\n\n\n\n\nfunction MainFormContainer() {\n  const [allValues, setAllValues] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    interests: [],\n    about: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //just show the success page (step 4 )\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        step: 4,\n      };\n    });\n  };\n  \n  const handleChange = (event, {name, value, checked, type}) => {\n    if (type === \"checkbox\") {\n      //TODO generic solution for these checkboxes!!\n      let {interests} = this.state;\n      if (checked) {\n        interests = [...interests, value];\n      } else {\n        interests = interests.filter((item) => item !== value);\n      }\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          interests: interests,\n        };\n      });\n    } else {\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          [name]: value,\n        };\n      });\n    }\n  };\n\n  const next = () => {\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: prevState.step + 1,\n    //   };\n    // });\n    console.log('steeep', this.state.step)\n    setStep(this.state.step + 1);\n  };\n  \n  const prev = () => {\n    // this.setState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     step: prevState.step - 1,\n    //   };\n    // });\n    setStep(this.state.step  - 1);\n  };\n\n  const [step, setStep] = useState(1);\n\n  // const {firstName, lastName, email, gender, age, country, interests, about} =\n  //   this.state;\n  // const values = {\n  //   firstName,\n  //   lastName,\n  //   email,\n  //   gender,\n  //   age,\n  //   country,\n  //   interests,\n  //   about,\n  // };\n\n  return (\n    <Container textAlign='left'>\n      <Form onSubmit={handleSubmit}>\n        <Step\n          step={step}\n          // values={values}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      </Form>\n    </Container>\n  );\n}\n\nconst Step = ({step, values, handleChange, next, prev}) => {\n  switch (step) {\n    case 1:\n      return (\n        <UserForm values={values} handleChange={handleChange} next={next} />\n      );\n    case 2:\n      return (\n        <FeedbackForm\n          values={values}\n          handleChange={handleChange}\n          next={next}\n          prev={prev}\n        />\n      );\n    case 4:\n    // return <Success values={values}\n    // />\n    default:\n      return null;\n  }\n};\n\nexport default MainFormContainer"]},"metadata":{},"sourceType":"module"}